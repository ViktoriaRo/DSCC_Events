{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/events/EventSummary.js","components/events/EventList.js","components/dashboard/Dashboard.js","components/events/EventDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/events/CreateEvent.js","store/actions/eventActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/eventReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","href","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","EventSummary","_ref","event","title","authorFirstName","authorLastName","createdAt","calendar","EventList","events","events_EventSummary","Dashboard","_this$props","this","events_EventList","dashboard_Notifications","Redirect","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateEvent","createEvent","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","EventDetails","isLocalhost","Boolean","window","location","hostname","register","config","navigator","URL","process","origin","addEventListener","swUrl","concat","fetch","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initState","authReducer","arguments","length","undefined","action","message","eventReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4b0ac589.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/create\">New Event</NavLink></li>\n            <li><a href='/' onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lightening-1\">\n                {props.profile.initials}\n            </NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' })\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err})\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\n        });\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then(resp => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err})\n        })\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\n            <li><NavLink to=\"/signin\">Log In</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"brand-logo\">EnLightning</Link>\n                { links }\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n    const {notifications} = props;\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notification\">\n                        {notifications && notifications.map(item => {\n                            return (\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user} </span>\n                                    <span>{item.content} </span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        })}\n\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\n\nconst EventSummary = ({event}) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{event.title}</span>\n                <p>Posted by {event.authorFirstName} {event.authorLastName}</p>\n                <p className=\"grey-text\">{moment(event.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default EventSummary;","import React from 'react';\nimport EventSummary from './EventSummary';\nimport { Link } from 'react-router-dom';\n\nconst EventList = ({events}) => {\n    return (\n        <div className=\"project-list section\">\n           { events && events.map(event => {\n               return(\n                   <Link to={'/event/' + event.id} key={event.id}> \n                    <EventSummary event={event} />\n                   </Link>\n               )\n           })}\n        </div> \n    )\n}\n\nexport default EventList;","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport EventList from '../events/EventList';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n    render(){\n        // console.log(this.props.events)\n        const { events, auth, notifications } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <EventList events={events}/>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps= (state) => {\n    console.log(state);\n    return {\n        events: state.firestore.ordered.events,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n \nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'events', orderBy: ['createdAt', 'desc']},\n        { collection: 'notifications', limit: 4, orderBy: ['time', 'desc']}\n    ])\n)(Dashboard);","import React from 'react'\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst EventDetails = (props) => {\n    const { event, auth} = props;\n    if (!auth.uid) return <Redirect to='/signin' />\n\n    if (event) {\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{ event.title }</span>\n                        <p>{ event.content }</p>\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        <div>Posted by { event.authorFirstName } { event.authorLastName }</div>\n                        <div>{moment(event.createdAt.toDate()).calendar()}</div>\n                    </div>\n                </div>\n        </div>\n        )\n    } else {\n         return (\n              <div className=\"container center\">\n                  <p>Loading event...</p>\n              </div>\n            )\n        }\n    \n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const events = state.firestore.data.events;\n    const event = events ? events[id] : null\n    return {\n        event: event,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'events' }\n    ])\n)(EventDetails)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\n\nclass SignIn extends Component {\n    state ={\n        email: '',\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.signIn(this.state)\n    }\n    render() {\n        const { authError,auth } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return (\n        <div className=\"container\">\n            <form onSubmit={this.handleSubmit} className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                    <div className=\"red-text center\">\n                        { authError ? <p>{ authError }</p> : null }\n                    </div>\n                </div>\n            </form>\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n \nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions';\n\nclass SignUp extends Component {\n    state ={\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.signUp(this.state)\n    }\n    render() {\n        const { authError, auth } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return (\n        <div className=\"container\">\n            <form onSubmit={this.handleSubmit} className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"firstName\">First Name</label>\n                    <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\n                    <div className=\"red-text center\">\n                        { authError ? <p>{authError}</p> : null }\n                        {/* { authError ? <p>{ console.log(authError) }</p> : null } */}\n                        \n                    </div>\n                </div>\n            </form>\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (creds) => dispatch(signUp(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createEvent } from '../../store/actions/eventActions';\nimport { Redirect } from 'react-router-dom';\n\nclass CreateEvent extends Component {\n    state ={\n        title: '',\n        content: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.createEvent(this.state)\n        this.props.history.push('/')\n    }\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        return (\n        <div className=\"container\">\n            <form onSubmit={this.handleSubmit} className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">Create new Event</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"content\">Event Content</label>\n                    <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                </div>\n            </form>\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createEvent: (event) => dispatch(createEvent(event))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateEvent);\n","export const createEvent = (event) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('events').add({\n            ...event,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_EVENT', event });\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_EVENT_ERROR', err });\n        })\n    }\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport EventDetails from './components/events/EventDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateEvent from './components/events/CreateEvent';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/event/:id' component={EventDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateEvent} />\n            \n          </Switch>\n        </div>\n        \n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'LOGIN_ERROR':\n        console.log('login error')\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('logout success')\n            return state\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state\n    }\n}\n\nexport default authReducer;","const initState = {\n    events: [\n        {\n            id: '1',\n            title: 'First event',\n            content: 'Is post each that just leaf no. He connection interested so we an sympathize advantages. To said is it shed want do. Occasional middletons everything so to. Have spot part for his quit may. Enable it is square my an regard. Often merit stuff first oh up hills as he. Servants contempt as although addition dashwood is procured. Interest in yourself an do of numerous feelings cheerful confined. '\n        },\n        {\n            id: '2',\n            title: 'Second event',\n            content: 'Woody equal ask saw sir weeks aware decay. Entrance prospect removing we packages strictly is no smallest he. For hopes may chief get hours day rooms. Oh no turned behind polite piqued enough at. Forbade few through inquiry blushes you. Cousin no itself eldest it in dinner latter missed no. Boisterous estimating interested collecting get conviction friendship say boy. Him mrs shy article smiling respect opinion excited. Welcomed humoured rejoiced peculiar to in an.  '\n        },\n        {\n            id: '3',\n            title: 'Third event',\n            content: 'It real sent your at. Amounted all shy set why followed declared. Repeated of endeavor mr position kindness offering ignorant so up. Simplicity are melancholy preference considered saw companions. Disposal on outweigh do speedily in on. Him ham although thoughts entirely drawings. Acceptance unreserved old admiration projection nay yet him. Lasted am so before on esteem vanity oh. '\n        }\n    ]\n}\n\nconst eventReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_EVENT':\n            console.log('created event', action.event);\n            return state;\n        case 'CREATE_EVENT_ERROR':\n            console.log('create event error', action.err);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default eventReducer;","import authReducer from './authReducer'\nimport eventReducer from './eventReducer'\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    event: eventReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer,\n});\n\nexport default rootReducer;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyCR8WmtG_DllPn3LRySiyofBRt60oeQFd4\",\n    authDomain: \"enlightning-976fd.firebaseapp.com\",\n    databaseURL: \"https://enlightning-976fd.firebaseio.com\",\n    projectId: \"enlightning-976fd\",\n    storageBucket: \"enlightning-976fd.appspot.com\",\n    messagingSenderId: \"717223605384\"\n  };\n  firebase.initializeApp(config);\n  firebase.firestore().settings({ timestampsInSnapshots: true });\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.register();\n})\n\n\n"],"sourceRoot":""}